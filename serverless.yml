service: aws-rekognition-labels

frameworkVersion: '3'

provider:
  name: aws
  stage: myauka
  runtime: python3.8
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"
        - Effect: Allow
          Action:
            - rekognition:*
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:*
          Resource: "*"

  environment:
    BUCKET_NAME: ${self:service}-${self:provider.stage}-blobs-bucket
    TABLE_NAME: ${self:service}-${sls:stage}-blobs-table

functions:

  put_blob:
#    !!!
    handler: handlers.put_blob.put_blob
    events:
      - http:
          path: blobs
          method: post

  get_blob:
#    !!!
    handler: handlers.get_blob_info.get_blob_info
    events:
      - http:
          path: blob/{blob_id}
          method: get

  search_labels:
#    !!!
    handler: handlers.search_labels.process_blob
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          existing: true

  make_callback:
    handler: handlers.make_callback.make_callback
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - BlobTable
              - StreamArn

resources:
  Resources:
    BlobBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - HEAD
              AllowedOrigins:
                - "*"
    #     !!!
    BlobTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: blob_id
            AttributeType: S
        KeySchema:
          - AttributeName: blob_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
#        BucketName: !Join
#          - "-"
#          - - !Ref AWS::AccountId
#            - "${self:custom.bucket.${self:provider.stage}}"
#            - !Ref AWS::Region

